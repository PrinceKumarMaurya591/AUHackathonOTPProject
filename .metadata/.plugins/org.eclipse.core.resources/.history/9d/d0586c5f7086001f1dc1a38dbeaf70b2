package com.au.otp.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Embedded;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import org.modelmapper.ModelMapper;
import com.aubank.other.constants.OTPStatus;
import com.aubank.other.payload.request.OTPRequest;
import com.aubank.other.payload.request.ValidateOTPRequest;
import com.aubank.other.payload.response.OTPResponse;

import jakarta.persistence.Entity;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "otp_details")
public class OTPEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "cust_ref")
    private String custRef;

    @Column(name = "request_id")
    private String requestId;

    @Column(name = "channel")
    private String channel;

    @Column(name = "mobile")
    private String mobile;

    @Column(name = "otp_length")
    private String otpLength;

    @Column(name = "otp_timeout")
    private String otpTimeout;

    @Column(name = "otp_type")
    private String otpType;

    @Column(name = "otp_status_code")
    private String statusCode;

    @Column(name = "otp")
    private String otp;

    @Column(name = "otp_generated_count")
    private int totalOtpGeneratedCount;

    @Column(name = "otp_validated")
    private boolean otpValidated;

    @Column(name = "otp_regenerated")
    private boolean otpRegenerated;

    @Embedded
    DefaultEntity defaultEntity;

    public static OTPEntity build(OTPRequest otpRequest, OTPResponse otpResponse) {
        OTPEntity otpEntity = new ModelMapper().map(otpRequest, OTPEntity.class);
        otpEntity.setStatusCode(otpResponse.getStatusCode());
        if (otpResponse.getStatusCode().equals(OTPStatus.SUCCESS.getStatusCode())) {
            otpEntity.setTotalOtpGeneratedCount(1);
        }
        return otpEntity;
    }

    public static OTPEntity build(ValidateOTPRequest validateOTPRequest, OTPResponse otpResponse) {
        OTPEntity otpEntity = new ModelMapper().map(validateOTPRequest, OTPEntity.class);
        otpEntity.setStatusCode(otpResponse.getStatusCode());
        return otpEntity;
    }
}
